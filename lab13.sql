/*
James Liang
Lab 13
*/

--1.
SET SERVEROUTPUT ON;

DECLARE
   NUM NUMBER:= 10;
BEGIN
   DBMS_OUTPUT.PUT_LINE('The value of num is: ' || num);
END;
/

--2.
DECLARE
    TOTAL NUMBER;
BEGIN
SELECT COUNT(*) INTO TOTAL FROM STUDENT.STUDENT;
    DBMS_OUTPUT.PUT_LINE('TOTAL NUMBER OF STUDENTS: ' || total);
END;
/

--3.
DECLARE
    SALARY STUDENT.EMPLOYEE.SALARY%TYPE;
    TITLE STUDENT.EMPLOYEE.TITLE%TYPE;
BEGIN
SELECT SALARY, TITLE INTO SALARY, TITLE FROM STUDENT.EMPLOYEE WHERE NAME = 'Stella';
    DBMS_OUTPUT.PUT_LINE('Salary is ' || SALARY || '. Title is ' || TITLE || '.');
END;
/

--4.
DECLARE
    MAX_INV AP.INVOICES.INVOICE_TOTAL%TYPE;
    MIN_INV AP.INVOICES.INVOICE_TOTAL%TYPE;
BEGIN
SELECT MAX(INVOICE_TOTAL), MIN(INVOICE_TOTAL) INTO MAX_INV, MIN_INV FROM AP.INVOICES;
    DBMS_OUTPUT.PUT_LINE('Highest Invoice Total: ' || TO_CHAR(MAX_INV, '$999,999.99'));
    DBMS_OUTPUT.PUT_LINE('Lowest Invoice Total: ' || TO_CHAR(MIN_INV, '$999,999.99'));
END;
/

--5.
DECLARE
    MAXDATE DATE;
    DUEDATE DATE;
BEGIN
DUEDATE := '19-July-2014';
SELECT MAX(INVOICE_DUE_DATE) INTO MAXDATE FROM AP.INVOICES WHERE INVOICE_TOTAL - CREDIT_TOTAL - PAYMENT_TOTAL > 0;
IF MAXDATE >= DUEDATE THEN
    DBMS_OUTPUT.PUT_LINE('Overdue');
ELSE
    DBMS_OUTPUT.PUT_LINE('OK');
END IF;
END;
/

--6.
DECLARE
    STATE_INITIALS VARCHAR2(50);
BEGIN
SELECT CUSTOMER_STATE INTO STATE_INITIALS FROM OM.CUSTOMERS WHERE CUSTOMER_ID = 15;
CASE STATE_INITIALS
WHEN 'WI' THEN
    DBMS_OUTPUT.PUT_LINE('Cold Winters');
WHEN 'CA' THEN
    DBMS_OUTPUT.PUT_LINE('Moderate Winters');
ELSE
    DBMS_OUTPUT.PUT_LINE('No Information on type of Winters');
END CASE;
END;
/

--7.

--P1.
DECLARE
X INTEGER;
BEGIN
FOR X IN 1..3 LOOP
DBMS_OUTPUT.PUT_LINE(X);
END LOOP;
END;
/


--P2.
DECLARE
X INTEGER;
BEGIN
X := 1;
While X < 4 LOOP
DBMS_OUTPUT.PUT_LINE(X);
X := X + 1;
END LOOP;
END;
/


--P3.
DECLARE
X INTEGER;
BEGIN
X := 3;
LOOP
DBMS_OUTPUT.PUT_LINE(X);
X := X - 1;
EXIT WHEN X = 0;
END LOOP;
END;
/

--8.
DECLARE
EMP_NAME VARCHAR2(30);
BEGIN
SELECT TITLE
INTO EMP_NAME FROM STUDENT.EMPLOYEE WHERE NAME = 'SALLY';
DBMS_OUTPUT.PUT_LINE('The employee is ' || EMP_NAME);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('There is no employee with the name provided');
END;
/
