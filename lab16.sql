/*
James Liang
Lab 16
*/

CREATE TABLE EMPLOYEE_COPY AS SELECT * FROM STUDENT.EMPLOYEE;
SET SERVEROUTPUT ON;

--1.
CREATE OR REPLACE FUNCTION GET_BALANCE_DUE(ID NUMBER) 
RETURN NUMBER 
AS BALANCE NUMBER;
BEGIN 
   SELECT (INVOICE_TOTAL - PAYMENT_TOTAL - CREDIT_TOTAL) AS BALANCE_DUE
   INTO BALANCE 
   FROM AP.INVOICES WHERE INVOICE_ID = ID; 
   RETURN(BALANCE);
END;
/

--2.
SELECT VENDOR_ID, INVOICE_NUMBER, GET_BALANCE_DUE(INVOICE_ID) AS BALANCE_DUE FROM AP.INVOICES;

--3.
CREATE OR REPLACE PROCEDURE UPDATE_EMPLOYEE(ID NUMBER, SAL NUMBER)
AS
BEGIN
    UPDATE EMPLOYEE_COPY SET SALARY = SAL WHERE EMPLOYEE_ID = ID;
IF SAL < 0 THEN
    RAISE_APPLICATION_ERROR(-20000,'SQL Error: The SALARY must be positive');
END IF;
END;
/

--4.
CALL UPDATE_EMPLOYEE(3, -30000);

CALL UPDATE_EMPLOYEE(3, 50000);

